=begin
#BillaBear

#The REST API provided by BillaBear

OpenAPI spec version: 1.1.0
Contact: support@billabear.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.66
=end

require 'spec_helper'
require 'json'

# Unit tests for Billabear::UsageApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UsageApi' do
  before do
    # run before each test
    @instance = Billabear::UsageApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsageApi' do
    it 'should create an instance of UsageApi' do
      expect(@instance).to be_instance_of(Billabear::UsageApi)
    end
  end

  # unit tests for create_customer_usage_limit
  # Create Usage Limit
  # Create Usage Limit for the custoemr
  # @param body 
  # @param customer_id The id of the customer to retrieve
  # @param [Hash] opts the optional parameters
  # @return [UsageLimit]
  describe 'create_customer_usage_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_event
  # Create Event
  # Creates an event that is used for usage billing
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'create_event test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for customer_customer_id_uasge_limit_limit_id_delete
  # Delete Usage Limit
  # Delete Usage Limit for the custoemr
  # @param customer_id The id of the customer to retrieve
  # @param usage_limit_id The id of the usage limit
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'customer_customer_id_uasge_limit_limit_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_customer_costs
  # Usage Cost Estimate
  # The estimated costs from usage based billing for a customer
  # @param customer_id The id of the customer to retrieve
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2001]
  describe 'get_customer_costs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_customer_usage_limits_by_id
  # Fetch Customer Usage Limits
  # Usage Limits for a specific customer
  # @param customer_id The id of the customer to retrieve
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2005]
  describe 'get_customer_usage_limits_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
